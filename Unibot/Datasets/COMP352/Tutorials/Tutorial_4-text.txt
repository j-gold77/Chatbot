COMP 352Tutorial Session 41OUTLINEo Queues and stacks:o List implementationo Array implementationo Exercise on stack2STACK AND QUEUE3â€¢ Stack: examine the item  most recently add ðŸ¡ªðŸ¡ª LIFO= Last In First Outâ€¢ Queue: examine the item least recently add ðŸ¡ªðŸ¡ª FIFO= First In First OutSTACK ARRAY IMPLEMENTATION Simple way to implement stack Add element from left to right  Keep track of the index of the top element Problem. Requiring client to provide capacity/ does not implement (a good) API! Solution with Resizing array: If array is full, create a new array of twice the size, and copy items. halve size of array when array is one-quarter full 4STACK SINGLY LINKED LISTIMPLEMENTATION Need a class to represent a node in the list Class Node {Type data;Node next;} The list keep track of the head5STACK IMPLEMENTATION (CONâ€™T)6Class List{Node first;// all operations} Add element from right to left. Note: one can use doubly linked list to implement stackQUEUE: ARRAY IMPLEMENTATION Simple implementation  Need to keep track of the index of the front and the rear7With a simple array when we dequeue we need to shift all the elements in the frontSolution: Make the array circular or use a list !!!!!!!HIGHLIGHTS ON A QUEUE IMPLEMENTATIONUSING A CIRCULAR ARRAYo The following variables are defined:â€¢ f: index to the cell storing the first element in the queue (candidate to be removed)â€¢ r: index to the next available cello Operations:â€¢ size() ðŸ¡ªðŸ¡ª (N â€“ f + r) modNâ€¢ isEmpty() ðŸ¡ªðŸ¡ª f = râ€¢ enqueue(x) ðŸ¡ªðŸ¡ª r = (r + 1) modNâ€¢ dequeue() ðŸ¡ªðŸ¡ª f = (f + 1) modN 8QUEUE: LIST IMPLEMENTATION Use doubly linked list.Class Node {Type data;Node next;Node previous;} Need to keep track of the front and rear of the list: Class List{Node first;Node rear;// all operations}9WORST CASE TIME COMPLEXITY LINEARDATA STRUCTURE10STACK EXERCISESQuestion 1:Suppose an initially empty stack S has performed a total of 25 push operations, 12 top operations, and 10 pop operations, 3 of which generated StackEmptyExceptions, which were caught and ignored. What is the current size of S?11STACK EXERCISESQuestion 2: Suppose you have a stack in which the values 1 through 5 must be pushed on the stack in that order, but that an item on the stack can be popped at any time. Give a sequence of push and pop operations such that the values are popped in the following order: a) 2,4,5,3,1 b) 1,5,4,2,3 c) 1,3,5,4,2 It might not be possible in each case. 12STACK EXERCISESQuestion 3: Give a recursive method for removing all the elements in a stack.13STACK EXERCISESQuestion 4: Write a program that reads in a positive integer and prints the binary representation of that integer.  Hint:  divide the integer by 2.14STACK EXERCISEQuestion 5:Given an expression string, write a program to find whether a given string has balanced parentheses or not. Only consider the parentheses [,],(,),{,}a) Input : {[]{()}} Output : Balanced b) Input : [{}{}(] Output : Unbalanced15QUEUE EXERCISESQuestion 6: Describe the output for the following sequence of queue operations: enqueue(5), enqueue(3), dequeue(), enqueue(2), enqueue(8), dequeue(), dequeue(), enqueue(9), enqueue(1), dequeue(), enqueue(7), enqueue(6), dequeue(), dequeue(), enqueue(4), dequeue(), dequeue().16QUEUE EXERCISESQuestion 7: Suppose an initially-empty queue Q has performed a total of 32 enqueue operations, 10 front operations, and 15 dequeue operations, 5 of which generated QueueEmptyExceptions, which were caught and ignored. What is the current size of Q?17QUEUE EXERCISESQuestion 8: Give an algorithm for reversing a queue Q. Only the following standard operations are allowed on queue. enqueue(x) : Add an item x to rear of queue. dequeue() : Remove an item from front of queue. empty() : Checks if a queue is empty or not.18STACK AND QUEUE EXERCISESQuestion 9: Describe how to implement the stack ADT using two queues. What is the running time of the push() and pop() methods in this case?19	Comp 352	Outline	Stack and queue	Stack Array implementation	Stack singly linked list implementation	Stack implementation (conâ€™t)	Queue: array implementation	Highlights on a Queue Implementation Using a Circular Array	Queue: list implementation	Worst case time complexity linear data structure	Stack Exercises 	Stack Exercises 	Stack Exercises 	Stack Exercises 	Stack Exercise	Queue Exercises 	Queue Exercises 	Queue Exercises 	Stack and Queue Exercises 