COMP 352Tutorial 1: Algorithm Analysis1OUTLINE¢ Quick Overview on Asymptotic Analysis:¢ Definition¢ Asymptotic Notations¢ Review on Logarithm and Exponential Functions¢ Exercises2ANALYSIS AND COMPLEXITY OFALGORITHMS:What is an Algorithm?What do we mean by Complexity ?How to measure Complexity ?3ANALYSIS AND COMPLEXITY OFALGORITHMS¢ Algorithm is a sequence of computational stepsthat transform the input into the output.¢ Analysis of an algorithm is to determine theamount of resources (such as time and storage)necessary to execute it.4ANALYSIS AND COMPLEXITY OFALGORITHMS¢ The complexity of an algorithm is the cost,measured in running time, or storage, or whateverunits are relevant, of using the algorithm to solveone of those problems.5BIG-O¢ Big-O notation is a relative representation of thecomplexity of an algorithm.¢ Big-O is just a way to "Express" yourself in acommon way, "How much time / space does it taketo run the code?”67ASYMPTOTIC NOTATIONST (n) Name ProblemsO(1) Constant Easy to SolveO(𝑙𝑜𝑔𝑛) LogarithmicO(n) LinearO(n𝑙𝑜𝑔𝑛) Linear-logarithmicO(𝑛%) QuadraticO(𝑛&) CubicO(2() Exponential Hard to SolveO(n!) FactorialTHE SEVEN FUNCTIONS ALONG WITH THEIRCORRESPONDING GROWTH RATE:8ASYMPTOTIC NOTATIONS9ASYMPTOTIC NOTATIONS10IMPORTANT REVIEWS:¢ The sum of consecutive integer numbers from i to n:) 𝑖 =𝑛 𝑛 + 12(./0¢ Properties of:Logarithms Exponentials11TUTORIAL 1- ANALYSIS OF ALGORITHMS12Q. 1. aWhat is the Big-O of the following methods?public int example1 ( int A[] ) {// compute sum of elements of Aint i, sum = 0;for ( i=0; i < A.length; i++ ) {sum += A[i];}return( sum );}TUTORIAL 1- ANALYSIS OF ALGORITHMSQ. 1. b13public void example2 ( int A[], int B[] ) {// store the prefix sums of A into Bint i,j, sum;for( i=0; i < A.length; i++ ) {sum = 0;for( j=0; j <= i; j++ ) {sum += A[j];}B[i] = sum;}}TUTORIAL 1- ANALYSIS OF ALGORITHMS14Q. 1. cpublic void example3 ( int A[], int B[] ) {// store the prefix sums of A into Bint i,sum;sum = 0;for( i=0; i < A.length; i++ ) {sum += A[i];B[i] = sum;}}TUTORIAL 1- ANALYSIS OF ALGORITHMS15public void example4 ( int A[], int B[] ) {// store the prefix sums of prefix sums of A into Bint i,j,k,sum;for( i=0; i < A.length; i++ ) {sum = 0;for( j=0; j <= i; j++ ) {for( k=0; k <= j; k++ ) {sum += A[k];}}B[i] = sum;}}Q. 1. dTUTORIAL 1- ANALYSIS OF ALGORITHMSCan example4(A,B) be re-written so that it runs faster? How much faster?16Q. 1. eTUTORIAL 1- ANALYSIS OF ALGORITHMSQ. 2Suppose each row of an n x n array A consists of 1'sand 0's such that, in any row of A, all the 1's comebefore any of the 0's in that row. Assuming A isalready in memory, describe a method running inO(n) time (not O(n2) time) for finding the row of Athat contains the most 1's.17TUTORIAL 1- ANALYSIS OF ALGORITHMSGiven an n-element array 𝑋 , Algorithm 𝐷 callsAlgorithm 𝐸 on each element 𝑋[𝑖]. Algorithm 𝐸runs in 𝑂(𝑖) time when it is called on element 𝑋[𝑖].What is the worst-case running time of algorithm𝐷?18Q. 3TUTORIAL 1- ANALYSIS OF ALGORITHMSQ. 4Describe a method for finding both the minimumand maximum of n numbers using fewer than &(%comparisons.(Hint: First construct a group of candidate minimumand a group of candidate maximum.)What is the time complexity?19TUTORIAL 1- ANALYSIS OF ALGORITHMSBob built a website and gave the URL only to his 𝑛friends, which he numbered from 1 to 𝑛. He toldfriend number 𝑖 that he/she can visit the website atmost 𝑖 times. Now Bob has a counter, 𝐶, Keepingtrack of the total number of visits to the site (butnot the identities of who visits). What is theminimum value for 𝐶 such that Bob should knowthat one of his friends has visited his/her maximumallowed number of times?20Q. 5TUTORIAL 1- ANALYSIS OF ALGORITHMSQ. 6Show that if d(n) is O(f(n)), then ad(n) is O(f(n)), for any constant a>0.21TUTORIAL 1- ANALYSIS OF ALGORITHMSQ. 7Show that if d(n) is O(f(n)) and e(n) is O(g(n)), then the product of d(n)e(n) is O(f(n)g(n)).22TUTORIAL 1- ANALYSIS OF ALGORITHMSThe number of operations executed by algorithm 𝐴and 𝐵 is 40𝑛% and 2𝑛&, respectively. Determine 𝑛>such that 𝐴 is better than 𝐵 for 𝑛 ≥  𝑛>.23Q. 8TUTORIAL 1- ANALYSIS OF ALGORITHMSQ. 9Show that 2n+1 is O(2n).24TUTORIAL 1- ANALYSIS OF ALGORITHMSQ. 10Show that n2 + 2n + 1 is O(n2).25TUTORIAL 1- ANALYSIS OF ALGORITHMSQ. 11Prove that logD(𝑛) is in 𝑂(logE(𝑛)).26