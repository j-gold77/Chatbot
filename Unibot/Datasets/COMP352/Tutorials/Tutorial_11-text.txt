Comp 352COMP 352Tutorial Session 111OUTLINEo Graph implementationo Some graph propertieso Graph Traversal o BFSo DFSo Short path algorithm : Dijkstra2GRAPH:ADJACENCY LIST3The adjacency-list representation of a graph G = (V, E) consists of an array Adj of |V| lists, one for each vertex in V . For each, the adjacency listAdj[u] contains all the vertices v such that there is an edge . ADJACENCY MATRIX4For the adjacency-matrix representation of a graph G = (V, E). We assume that the vertices are numbered 1,2, …, |V| in some arbitrary manner.  The adjacency matrix of G is the n × n matrix A whose (i, j) entry, denoted by [A]i,j , is defined by  [A]i,j = 1 if nodes i and j are adjacent, 0 otherwise. PROPERTIES OF GRAPH Directed graphs: edges have a specific direction Undirected graphs: edges are two-way Weighted graphs: each edge has an associated weight Sparse graphs: graphs for which |E| is much less than |V|2 Dense graphs: graphs for which |E| is close to |V|2where |E| is the number of edges and |V| is the number of nodes5PROPERTIES OF GRAPH: CONT’D Cycle : circular sequence of alternating vertices and edges  Eulerian Paths/cycles: Path/cycle that visits all edges exactly once  Hamiltonian Paths/Cycles : Path/cycle that visits all vertices exactly once (Other than first and last for cycles) 6BFS TRAVERSALTraverse broad into the graph by visiting sibling/neighbor nodes before visiting children nodesGiven a graph G=(V, E) and a distinguished source vertex s, breadth-first search systematically explores the edges of G to “discover” every vertex that is reachable from s.7Uses queue data structure BFS TRAVERSAL8BFS TRAVERSALHow to mark as visited? Use an extra array of visited and unvisited nodes Use an extra parameter “color” at each nodes to describe the fact it has been visited or not Complexity: O(|V|+|E|)Example:9SOME APPLICATIONS OF BREADTH FIRSTTRAVERSAL Shortest Path between two nodes u and v: path with least number of edges.  Social Networking Websites: to find people within a given distance ‘k’ from a person Networking: to broadcast packets such that it will reach targets in minimal time, or finding optimal neighbors.10Source: https://www.geeksforgeeks.org/applications-of-breadth-first-traversal/DFS TRAVERSALTraverse deep into the graph by visiting children nodes before visiting sibling neighbor nodesThe strategy followed by depth-first search is, as its name implies, to search “deeper” in the graph whenever possible. Depth-first search explores edges out of the most recently discovered vertex v that still has unexplored edges leaving it.Use stack data structure11DFS TRAVERSAL12DFS TRAVERSALHow to mark as visited? As previously Use an extra array of visited and unvisited nodes Use an extra parameter “color” at each nodes to describe the fact it has been visited or not Complexity: O(|V|+|E|)Example:13SOME APPLICATIONS OF DEPTH FIRSTTRAVERSALDetecting cycle in a graphFinding Strongly Connected Components of a graph A directed graph is called strongly connected if there is a path from each vertex in the graph to every other vertexTopological sorting: used when we want to sort a set of task based on their dependencies. The task are the vertices, and there is an edge from x to y if task x must be completed before job y can be started. The topological sort give the order in which we will execute the task.Example : determining the order of compilation tasks to perform in makefiles14https://www.geeksforgeeks.org/applications-of-depth-first-search/SHORTEST PATH IN GRAPH: DIJKJSTRAo Dijkstra’s algorithm is one of the most useful graph algorithmso Find the shortest path is a weighted graph (directed or not)o Example of real life problems:o Same principle in google map to find your path from one point to anothero Traveling on a budget: What is the cheapest airline schedule from Seattle to city X? o Optimizing routing of packets on the internet o Shipping: Find which high ways and roads to take to minimize total delay due to traffic 15DIJKSTRA ALGORITHM: PSEUDO CODEfunction dijkstra(G, S) :for each vertex V in G distance[V] <- infinite previous[V] <- NULL If V != S, add V to Priority Queue Q distance[S] <- 0 while Q IS NOT EMPTY U <- Extract MIN from Q for each unvisited neighbour V of U tempDistance <- distance[U] + edge_weight(U, V) if tempDistance < distance[V] distance[V] <- tempDistanceprevious[V] <- U return distance[], previous[] 16DIJKSTRA EXAMPLE1718Step Q D(A),P(A) D(B),P(B) D(C),P(C) D(D),P(D) D(E),P(E) D(F),P(FMCQ 1Adjacency matrix of all graphs are symmetric.a) Trueb) False19MCQ 2If the origin and terminus of a walk are same, the walk is known as... ?a) Openb) Closedc) Pathd) None of these20MCQ 3The degree of any vertex of graph is .... ?a) The number of edges incident with vertexb) Number of vertex in a graphc) Number of vertices adjacent to that vertexd) Number of edges in a graph21MCQ 4For the adjacency matrix of a directed graph the row sum is the _________ degree and the column sum is the ________ degree.a) in, outb) out, inc) in, totald) total, out22MCQ 5Which of the following is false in the case of a spanning tree of a graph G?a) It is tree that spans Gb) It is a subgraph of the Gc) It includes every vertex of the Gd) It can be either cyclic or acyclic23MCQ 6Which of the following statements is true concerning the time complexity of checking if an edge exists between two particular vertices depends on if the graph is stored using adjacency matrix?a) Depends on the number of edgesb) Depends on the number of verticesc) It is independent of both the number of edges and verticesd) It depends on both the number of edges and vertices24MCQ 725What could be possible DFS of the following graph ?a) ABCDEb) AEDCBc) EDCBAd) ADEBCMCQ 8The Depth First Search traversal of a directed graph will result into?a) Linked Listb) Treec) Graph with back edgesd) None of the mentioned26MCQ 9A person wants to visit some places. He starts from a vertex and then wants to visit every vertex till it finishes from one vertex, backtracks and then explore other vertex from same vertex. What algorithm he should use?a) Depth First Searchb) Breadth First Searchc) Post order traversald) None of the mentioned27MCQ 10When the Breadth First Search of a graph is unique?a) When the graph is a Binary Treeb) When the graph is a Linked Listc) When the graph is a n-ary Treed) None of the mentioned28MCQ 11Which of the following problems is similar to that of a Hamiltonian path problem?a) knapsack problemb) closest pair problemc) travelling salesman problemd) assignment problem29MCQ 12A graph G is called a ..... if it is a connected acyclic graph ?a) Cyclic graphb) Regular graphc) Treed) Not a graph30EXERCISEPerform a breadth-first search of the following graph, where E is the starting node. In other words, show the output if we issue the call BFS(E). Provide two cases: (a) Use a counterclockwiseordering from the top (12 o’clock position); and (b) Use a clockwise ordering from the top. 31	Comp 352	Outline	Graph:Adjacency List 	ADJACENCY MATRIX	properties of graph	properties of graph: cont’d	BFS traversal	BFS TRAVERSAL	BFS traversal	Some Applications of Breadth First Traversal�	DFS traversal	DFS traversal	DFS traversal	Some Applications of depth First Traversal	Shortest path in graph: dijkjstra	Dijkstra algorithm: Pseudo code	Dijkstra example	Slide Number 18	MCQ 1	MCQ 2	MCQ 3	MCQ 4	MCQ 5	MCQ 6	MCQ 7	MCQ 8	MCQ 9	MCQ 10	MCQ 11	MCQ 12	Exercise