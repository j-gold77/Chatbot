Analysis of AlgorithmsSorting Lower BoundDr. Aiman HannaDepartment of Computer Science & Software Engineering Concordia University, Montreal, CanadaThese slides have been extracted, modified and updated from original slides of :Data Structures and Algorithms in Java, 5th edition. John Wiley& Sons, 2010. ISBN 978-0-470-38326-1.Data Structures and the Java Collections Framework by William J. Collins, 3rdedition, ISBN 978-0-470-48267-4. Both books are published by Wiley.Copyright © 2010-2011 WileyCopyright © 2010 Michael  T. Goodrich, Roberto TamassiaCopyright © 2011 William J. CollinsCopyright © 2011-2021 Aiman Hanna All rights reserved Coverage Sorting Lower Bound2Sorting Lower BoundSorting Lower Bound 3Comparison-Based Sorting Many sorting algorithms are comparison based. They sort by making comparisons between pairs of objects Examples: bubble-sort, selection-sort, insertion-sort, heap-sort, merge-sort, quick-sort, ... Some of these algorithms were able to provide a performance of O(n log n).  This question can then be asked: Can we sort any faster than O(n log n)?  In other words, what is the lower bound (best case) that we can achieve when sorting (that is actually Ω())? Sorting Lower Bound 4Comparison-Based Sorting Let us start by deriving a lower bound on the running time of any algorithm that uses comparisons to sort nelements, x1, x2, …, xn. Let us then count only the number of comparisons for the sake of finding the lower bound. Is xi < xj?yesnoSorting Lower Bound 5Counting Comparisons Suppose, we are given a sequence S = {x1, x2, …, xn} that we wish to sort.  Whether the sequence is implemented using an arrays or a list is irrelevant since we are counting comparisons.  Each time we compare two elements, xi < xj, the result is either yes or no.  Based on this answer, some internal computation may be performed (which we ignore here), then another comparison is conducted, which will again have one of two possible outcomes. Sorting Lower Bound 6Counting Comparisons Consequently, we can represent a comparison-based sorting with a decision tree.  Each possible run of the algorithm corresponds to a root-to-leaf path in that tree. xi < xj ?xa < xb ?xm < xo ? xp < xq ?xe < xf ? xk < xl ?xc < xd ?Sorting Lower Bound 7Counting Comparisons It is important to note that the algorithm may have no explicit knowledge of the tree; rather, it simply represent all the possible sequences of comparisons that the application might make.   Each leaf hence represents one possible permutation (sorted sequence) of the elements to be compared.   The number of leaves can then conclude the height of the tree.  Given n values to compare, That number of leaves (possible permutations) is actually n! Sorting Lower Bound 8Counting Comparisons Example: Assume a sequence S with elements {x1, x2, x3} is to be sorted. There are 3! possible sorted sequences as follows: (x1 x2 x3), (x1 x3 x2), (x2 x1 x3), (x2 x3 x1), (x3 x1 x2), and (x3 x2 x1).   The following tree illustrates the possible comparisons: x1 < x2x1 < x3 x2 < x3Y Nx2 < x3Y Nx1 x2 x3 Yx1 x3 x2Nx3 x1 x2 x1 < x3Y NY Nx3 x2 x1x2 x1 x3 x2 x3 x1Sorting Lower Bound 9Decision Tree Height The height of the decision tree is a lower bound on the running time. Since there are n! leaves, the height of the tree is at least log (n!).minimum height (time)log (n!)xi < xj ?xa < xb ?xm < xo ? xp < xq ?xe < xf ? xk < xl ?xc < xd ?n!Sorting Lower Bound 10The Lower Bound Any comparison-based sorting algorithms takes at least log (n!) time Therefore, any such algorithm takes, at least, time That is, any comparison-based sorting algorithm must run in at least Ω(n log n) time. In other words, we comparison-based algorithms, we cannot achieve any better performance than n log n.  However, can we do any better if the algorithm is not a comparison-based then? Are such algorithms possible?).2/(log)2/(2log)!(log2nnnnn=≥	Sorting Lower Bound	Slide Number 2	Comparison-Based Sorting	Comparison-Based Sorting	Counting Comparisons	Counting Comparisons	Counting Comparisons	Counting Comparisons	Decision Tree Height	The Lower Bound