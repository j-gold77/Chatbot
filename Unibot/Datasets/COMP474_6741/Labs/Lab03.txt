Lab Session #03
Introduction
Welcome to the third lab. Note: Generally, if you did not finish any of the tasks from the previous week(s), make sure you catch up with any remaining tasks, since some of the new tasks build on previous work.



Task #1: FOAF
Your first task is to create a knowledge graph describing yourself, using the Friend-of-a-Friend (FOAF) vocabulary:

Add yourself as a Person
Add some properties, like first name, last name, age, mbox (email), etc.
Validate your graph using the tools you used in the previous lab.
Note: if you look closely at the FOAF vocabulary, you will probably encounter references to owl: (the Web Ontology Language). This is another language for describing vocabularies (ontologies), with more expressiveness than RDFS (we will cover some aspects of OWL in an upcoming lecture).

Try loading your new graph into the test programs you developed with RDFlib in the previous lab.



Task #2: RDFS
Your next task is to develop a new vocabulary using RDFS: The Friends-of-Concordia-University (FOCU) schema. This vocabulary should be able to express:

Classes for Student and Professor, both of which are subclasses of foaf:Person
A University class, which is a subclass of foaf:Organization
A property describing that a Student is enrolled at a University
A property describing that a Professor teaches Students
You can start with the following template: focu.ttl.

Add your RDFS triples for the four definitions above.
Validate your new RDF schema.
Now use your triples from Task #1 and add the information that you are a student at Concordia using your new FOCU vocabulary.
Again, validate and visualize your triples using the tools from last week's lab.
Some notes:

There are of course existing vocabularies for universities etc. and in a real system you would not create a new vocabulary duplicating existing definitions. This is just for exercise purposes, so that you see how to define a minimal, working RDF Schema.
We are using focu.io as the authority (domain name). This is again bad practice, since you do not control this domain name and thus cannot publish anything using this authority (we will discuss some best practices in an upcoming lecture).
The template above defines focudata: as the namespace for the triples describing people; you could use another namespace here, like the example.org you've used before. The point here is that it is not good practice to mix schema information (in this case your FOCU schema) with data described using this schema into the same namespace. In other words, you want to be able to load the schema and the data separately from each other into a system.
Note how you relate the novel, "unknown" (for outsiders) university definition to an existing class in FOAF. This is an example of a self-describing dataset as mentioned in Lecture #3. You could add more relations to other vocabularies, such as DBpedia, to help automated agents in analyzing these terms.


Task #3: Your first intelligent agent
Using your RDFlib program from the previous week, read the FOAF+FOCU triples about some people you created above. Next, your program should ask for a name and retrieve all the available information from the graph. For example, given the name Joe, it will print out all available triples like age, email, etc.:

Hello, I am your smart university agent. Who are you looking for?
> Joe

Joe is 22 years old and has the email address joe@example.com.
Now, if the person is enrolled at a university, your agent should determine in which city & country this person studies and print out this information as well:

Hello, I am your smart university agent. Who are you looking for?
> Jane

Jane is 24 years old and studies at Concordia University, which is located in Montreal, Canada.
Note: the FOAF/FOCU triples do not contain the city/country information, so in order to be able to answer this you will need to merge the graph obtained from DBpedia for a university with the graph you read in above. You can print out additional information about the university if you like.



That's all for this lab!